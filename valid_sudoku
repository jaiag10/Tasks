public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int isValidSudoku(final List<String> A) {
        if(A == null)
            return 0;
        
        int B = A.size();
        String E = A.get(0);
        
        if(B != 0 || E.length()!= 9)
            return 0;
        
        
        HashSet<Character> check = new HashSet<Character>();
        
        for(int i =0;i<9;i++){
            check.clear();
            for(int j=0;j<9;j++){
                char k = A.get(i).charAt(j);
                if(k == '.'){
                    continue;
                }
                if(check.contains(k)){
                    return 0;
                }
                else
                    check.add(k);
            }
        }
        
        for(int i =0;i<9;i++){
            check.clear();
            for(int j=0;j<9;j++){
                char k = A.get(j).charAt(i);
                if(k == '.'){
                    continue;
                }
                if(check.contains(k)){
                    return 0;
                }
                else
                    check.add(k);
            }
        }
        
        for(int l = 0; l<9; l++){
            int x = l/3;
            int y = l%3;
            
            for(int i=3*x; i<3*x + 3; i++){
                for(int j = 3*y; j<3*y + 3; j++ ){
                 char k = A.get(j).charAt(i);
                if(k == '.'){
                    continue;
                }
                if(check.contains(k)){
                    return 0;
                }
                else
                    check.add(k);
                }
            }
        }
        return 1;
        
    }
}